{"version":3,"sources":["constants.js","components/button.jsx","components/input.jsx","components/table-row.jsx","components/wrapper.jsx","App.js","index.js","registerServiceWorker.js"],"names":["COLUMNS","accessor","caption","inputType","API_URL","Button","styled","button","Input","input","TableRow","memo","props","isActionsDisabled","isEditing","onUserDelete","onUserEditCancel","onUserEditStart","onUserEditSubmit","initialData","userData","userId","isNewUser","useMemo","useState","reduce","acc","column","dataValues","setDataValues","handleDataValueChange","useCallback","evt","target","name","value","prevValues","handleCancel","handleDelete","handleEditStart","handleSave","map","key","disabled","onChange","placeholder","type","className","onClick","Wrapper","div","i","Table","table","App","isUserCreating","setIsUserCreating","usersData","setUsersData","userIdEditing","setUserIdEditing","fetchUsersData","fetch","then","res","json","useEffect","fetchNewUsers","data","method","body","JSON","stringify","headers","catch","console","error","fetchUserEdit","id","fetchUserDelete","handleUserCreateStart","handleUserDelete","handleUserEditCancel","handleUserEditStart","handleUserEditSubmit","editedUser","firstName","lastName","age","ReactDOM","render","document","getElementById","navigator","window","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log"],"mappings":"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","file":"static/js/main.2a1b189b.chunk.js","sourcesContent":["export const COLUMNS = [\r\n  {\r\n    accessor: \"firstName\",\r\n    caption: \"First Name\",\r\n    inputType: \"text\"\r\n  },\r\n  {\r\n    accessor: \"lastName\",\r\n    caption: \"Last Name\",\r\n    inputType: \"text\"\r\n  },\r\n  {\r\n    accessor: \"age\",\r\n    caption: \"Age\",\r\n    inputType: \"number\"\r\n  },\r\n];\r\n\r\nexport const API_URL = 'https://637acf47702b9830b9f3792a.mockapi.io/users';\r\n\r\nexport const NEW_USER_ID = \"new\";\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n\tfont-family: var(--family);\r\n\tcolor: var(--colors-text);\r\n\tline-height: 1.5em;\r\n\tpadding: 0.7em 0.5em;\r\n\r\n\tborder: none;\r\n\tbackground: var(--colors-ui-accent);\r\n\tborder-radius: var(--radius);\r\n\r\n\twidth: 120px;\r\n\r\n\t&:disabled {\r\n\t\tbackground: var(--colors-ui-base);\r\n\t}\r\n\r\n\t&.base {\r\n\t\tbackground: var(--colors-ui-base);\r\n\t}\r\n\r\n\t&:hover {\r\n\t\tbox-shadow: var(--shadow);\r\n\t}\r\n\r\n\t&.add {\r\n\t\tdisplay: block;\r\n\t\tmargin: 50px auto;\r\n\t}\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n\tfont-family: var(--family);\r\n\tline-height: 1.15em;\r\n\ttext-align: center;\r\n\t\r\n\tpadding: 0.7em 0.5em;\r\n\tborder-radius: var(--radius);\r\n\r\n\t&:disabled {\r\n\t\tcolor: var(--colors-text);\r\n\t}\r\n`;","import React, { useState, useCallback, useMemo, memo } from 'react';\r\nimport { COLUMNS, NEW_USER_ID } from '../constants';\r\nimport { Button } from './button';\r\nimport { Input } from './input';\r\n\r\nconst TableRow = memo((props) => {\r\n  const {\r\n    isActionsDisabled,\r\n    isEditing,\r\n    onUserDelete,\r\n    onUserEditCancel,\r\n    onUserEditStart,\r\n    onUserEditSubmit,\r\n    userData: initialData,\r\n    userId\r\n  } = props;\r\n\r\n  const isNewUser = useMemo(() => userId === NEW_USER_ID, [userId]);\r\n\r\n  const [dataValues, setDataValues] = useState(\r\n    isNewUser\r\n      ? COLUMNS.reduce((acc, column) => {\r\n          acc[column.accessor] = \"\";\r\n          return acc;\r\n        }, {})\r\n      : initialData\r\n  );\r\n  \r\n  const handleDataValueChange = useCallback((evt) => {\r\n    const { name, value } = evt.target;\r\n    setDataValues((prevValues) => ({ ...prevValues, [name]: value }));\r\n  }, []);\r\n\r\n  const handleCancel = useCallback(() => {\r\n    if (!isNewUser) {\r\n      setDataValues(initialData);\r\n    }\r\n    onUserEditCancel(userId, isNewUser);\r\n  }, [initialData, isNewUser, onUserEditCancel, userId]);\r\n\r\n  const handleDelete = useCallback(() => {\r\n    onUserDelete(userId);\r\n  }, [onUserDelete, userId]);\r\n\r\n  const handleEditStart = useCallback(() => {\r\n    onUserEditStart(userId);\r\n  }, [onUserEditStart, userId]);\r\n\r\n  const handleSave = useCallback(() => {\r\n    onUserEditSubmit(userId, dataValues, isNewUser);\r\n  }, [dataValues, isNewUser, onUserEditSubmit, userId]);\r\n\r\n  return (\r\n    <tr>\r\n      {COLUMNS.map(({ accessor, caption, inputType }) => (\r\n        <td key={accessor}>\r\n          <Input\r\n            disabled={!isEditing}\r\n            name={accessor}\r\n            onChange={handleDataValueChange}\r\n            placeholder={caption}\r\n            type={inputType}\r\n            value={dataValues[accessor]}\r\n          />\r\n        </td>\r\n      ))}\r\n      <td className=\"row-buttons\">\r\n        {isEditing ? (\r\n          <>\r\n            <Button disabled={isActionsDisabled} onClick={handleSave}>\r\n              Save\r\n            </Button>\r\n            <Button className='base' disabled={isActionsDisabled} onClick={handleCancel}>\r\n              Cancel\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button disabled={isActionsDisabled} onClick={handleEditStart}>\r\n              Edit\r\n            </Button>\r\n            <Button className='base' disabled={isActionsDisabled} onClick={handleDelete}>\r\n              Delete\r\n            </Button>\r\n          </>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n});\r\n\r\nexport default TableRow;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\twidth: 100%;\r\n\tmargin: auto;\r\n\tpadding: 0 2rem;\r\n`;\r\n","import React, { useCallback, useState, useEffect } from 'react'\nimport './index.css'\nimport { COLUMNS, API_URL, NEW_USER_ID } from './constants'\nimport TableRow from './components/table-row'\nimport { Wrapper } from './components/wrapper'\nimport { Button } from './components/button'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin: auto;\n`\n\nconst App = () => {\n  const [isUserCreating, setIsUserCreating] = useState(false)\n  const [usersData, setUsersData] = useState([])\n  const [userIdEditing, setUserIdEditing] = useState(null)\n\n  const fetchUsersData = useCallback(async () => {\n    await fetch(API_URL)\n      .then((res) => res.json())\n      .then((usersData) => setUsersData(usersData))\n  }, [])\n\n  useEffect(() => {\n    fetchUsersData()\n  }, [fetchUsersData])\n\n  const fetchNewUsers = useCallback(async (data) => {\n    await fetch(API_URL, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).catch(() => {\n      console.error('oh no')\n    })\n  }, [])\n\n  const fetchUserEdit = useCallback(async (data) => {\n    await fetch(`${API_URL}/${data.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n  }, [])\n\n  const fetchUserDelete = useCallback(async (id) => {\n    await fetch(`${API_URL}/${id}`, {\n      method: 'DELETE',\n    })\n  }, [])\n\n  const handleUserCreateStart = useCallback(() => {\n    setIsUserCreating(true)\n  }, [])\n\n  const handleUserDelete = useCallback(\n    async (userId) => {\n      await fetchUserDelete(userId)\n      await fetchUsersData()\n    },\n    [fetchUserDelete, fetchUsersData],\n  )\n\n  const handleUserEditCancel = useCallback((userId, isNewUser) => {\n    if (isNewUser) {\n      setIsUserCreating(false)\n    } else {\n      setUserIdEditing(null)\n    }\n  }, [])\n\n  const handleUserEditStart = useCallback(\n    (userId) => setUserIdEditing(userId),\n    [],\n  )\n\n  const handleUserEditSubmit = useCallback(\n    async (userId, userData, isNewUser) => {\n      if (isNewUser) {\n        await fetchNewUsers(userData)\n\n        await fetchUsersData()\n        setIsUserCreating(false)\n      } else {\n        const editedUser = {\n          id: userId,\n          firstName: userData.firstName,\n          lastName: userData.lastName,\n          age: userData.age,\n        }\n\n        await fetchUserEdit(editedUser)\n        await fetchUsersData()\n\n        setUserIdEditing(null)\n      }\n    },\n    [fetchNewUsers, fetchUsersData, fetchUserEdit],\n  )\n\n  return (\n    <>\n      <Wrapper>\n        <Button\n          disabled={isUserCreating || userIdEditing}\n          onClick={handleUserCreateStart}\n          className='add'\n        >\n          Add new user\n        </Button>\n        <Table>\n          <thead>\n            <tr>\n              {COLUMNS.map(({ accessor, caption }) => (\n                <th key={accessor}>{caption}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {isUserCreating && (\n              <TableRow\n                isEditing={true}\n                onUserEditCancel={handleUserEditCancel}\n                onUserEditSubmit={handleUserEditSubmit}\n                userId={NEW_USER_ID}\n              />\n            )}\n            {usersData.map(({ id: userId, ...userData }) => (\n              <TableRow\n                key={userId}\n                isActionsDisabled={isUserCreating}\n                isEditing={userId === userIdEditing}\n                onUserDelete={handleUserDelete}\n                onUserEditCancel={handleUserEditCancel}\n                onUserEditStart={handleUserEditStart}\n                onUserEditSubmit={handleUserEditSubmit}\n                userData={userData}\n                userId={userId}\n              />\n            ))}\n          </tbody>\n        </Table>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}